; robot model meta-information
model_information {
  manipulatorModelType     1      // 0: Default-arm, 1: Wheel-based manipulator, 2: Floating-arm manipulator, 3: Fully actuated floating-arm manipulator
  
  ; motion joints in the URDF to consider fixed
  removeJoints {
  }

  ; base frame of the robot (from URDF)
  baseFrame                       "base"
  ; end-effector frame of the robot (from URDF)
  eeFrame                         "WRIST_2"
}

model_settings
{
  usePreComputation               true
  recompileLibraries              true
}

; DDP settings
ddp
{
  algorithm                       SLQ

  nThreads                        3
  threadPriority                  50

  maxNumIterations                1
  minRelCost                      0.1
  constraintTolerance             1e-3

  displayInfo                     false
  displayShortSummary             false
  checkNumericalStability         false
  debugPrintRollout               false
  debugCaching                    false

  AbsTolODE                       1e-5
  RelTolODE                       1e-3
  maxNumStepsPerSecond            100000
  timeStep                        1e-3
  backwardPassIntegratorType      ODE45

  constraintPenaltyInitialValue   20.0
  constraintPenaltyIncreaseRate   2.0

  preComputeRiccatiTerms          true

  useFeedbackPolicy               false

  strategy                        LINE_SEARCH
  lineSearch
  {
    minStepLength                 1e-2
    maxStepLength                 1.0
    hessianCorrectionStrategy     DIAGONAL_SHIFT
    hessianCorrectionMultiple     1e-3
  }
}

; Rollout settings
rollout
{
  AbsTolODE                       1e-5
  RelTolODE                       1e-3
  timeStep                        1e-2
  integratorType                  ODE45
  maxNumStepsPerSecond            100000
  checkNumericalStability         false
}

; MPC settings
mpc
{
  timeHorizon                     1.0   ; [s]
  solutionTimeWindow              0.2   ; [s]
  coldStart                       false
  
  debugPrint                      false

  mpcDesiredFrequency             100   ; [Hz]
  mrtDesiredFrequency             400   ; [Hz]
}

; initial state
initialState
{
  ; initial state for the different types of arm base DOFs
  base
  {
    defaultManipulator
    {
    }

    floatingArmManipulator
    {
      (0,0)  0.0  ; position x
      (1,0)  0.0  ; position y
      (2,0)  0.0  ; position z
      (3,0)  0.0  ; euler angle z
      (4,0)  0.0  ; euler angle y
      (5,0)  0.0  ; euler angle x
    }

    fullyActuatedFloatingArmManipulator
    {
      (0,0)  0.0  ; position x
      (1,0)  0.0  ; position y
      (2,0)  0.0  ; position z
      (3,0)  0.0  ; euler angle z
      (4,0)  0.0  ; euler angle y
      (5,0)  0.0  ; euler angle x
    }

    wheelBasedMobileManipulator
    {
      (0,0)  0.0  ; position x
      (1,0)  0.0  ; position y
      (2,0)  0.0  ; heading
    }
  }

  ; initial state for the arm DOFs
  arm
  {
    (0,0)  2.5  ; SH_ROT
    (1,0) -1.0  ; SH_FLE
    (2,0)  1.5  ; EL_FLE
    (3,0)  0.0  ; EL_ROT
    (4,0)  1.0  ; WR_FLE
    (5,0)  0.0  ; WR_ROT
  }
}

inputCost
{
  ; control weight matrix
  R
  {
    ; input costs for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        scaling 1e-2

        (0,0)  5.0  ; position x
        (1,1)  5.0  ; position y
        (2,2)  5.0  ; position z
        (3,3)  5.0  ; euler angle z
        (4,4)  5.0  ; euler angle y
        (5,5)  5.0  ; euler angle x
      }

      wheelBasedMobileManipulator
      {
        scaling 1e-2

        (0,0)  5.0  ; forward velocity
        (1,1)  5.0  ; turning velocity
      }
    }

    ; input costs for the arm DOFs
    arm
    {
      scaling 1e-2

      (0,0)  1.0  ; SH_ROT velocity
      (1,1)  1.0  ; SH_FLE velocity
      (2,2)  1.0  ; EL_FLE velocity
      (3,3)  1.0  ; EL_ROT velocity
      (4,4)  1.0  ; WR_FLE velocity
      (5,5)  1.0  ; WR_ROT velocity
    }
  }
}

endEffector
{
  ; end effector quadratic penalty scaling
  muPosition  10.0
  muOrientation  5.0
}

finalEndEffector
{
  muPosition  10.0
  muOrientation  5.0
}

selfCollision
{ 
  ; activate self-collision constraint
  activate  true

  ; Self Collision raw object pairs
  collisionObjectPairs
  {
    [0] "1, 4"
    [1] "1, 6"
    [2] "1, 9"
  }

  ; Self Collision pairs
  collisionLinkPairs
  {
    [0] "arm_base, ARM"
    [1] "arm_base, ELBOW"
    [2] "arm_base, WRIST_1"
    [3] "link_that_doesnt_exist, WRIST_1"
  }

  ; minimum distance allowed between the pairs
  minimumDistance  0.1

  ; relaxed log barrier mu
  mu     1e-2

  ; relaxed log barrier delta
  delta  1e-3
}

; Only applied for arm joints: limits parsed from URDF
jointPositionLimits
{ 
  ; activate constraint
  activate  true

  ; relaxed log barrier mu
  mu      0.001

  ; relaxed log barrier delta
  delta   1e-3
}

jointVelocityLimits
{
  ; relaxed log barrier mu
  mu      0.01

  ; relaxed log barrier delta
  delta   1e-3

  lowerBound
  {
    ; velocity limits for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        (0,0)  -0.1  ; linear velocity x
        (1,0)  -0.1  ; linear velocity y
        (2,0)  -0.1  ; linear velocity z
        (3,0)  -0.3  ; euler angle velocity z
        (4,0)  -0.3  ; euler angle velocity y
        (5,0)  -0.3  ; euler angle velocity x
      }

      wheelBasedMobileManipulator
      {
        (0,0)  -0.1 ; forward velocity
        (1,0)  -0.3 ; turning velocity
      }
    }

    ; velocity limits for the arm DOFs
    arm
    {
      (0,0)  -0.45  ; SH_ROT velocity
      (1,0)  -0.45  ; SH_FLE velocity
      (2,0)  -0.45  ; EL_FLE velocity
      (3,0)  -0.45  ; EL_ROT velocity
      (4,0)  -0.45  ; WR_FLE velocity
      (5,0)  -0.45  ; WR_ROT velocity
    }
  }

  upperBound
  {
    ; velocity limits for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        (0,0)  0.1  ; linear velocity x
        (1,0)  0.1  ; linear velocity y
        (2,0)  0.1  ; linear velocity z
        (3,0)  0.3  ; euler angle velocity z
        (4,0)  0.3  ; euler angle velocity y
        (5,0)  0.3  ; euler angle velocity x
      }

      wheelBasedMobileManipulator
      {
        (0,0)  0.1 ; forward velocity
        (1,0)  0.3 ; turning velocity
      }
    }

    ; velocity limits for the arm DOFs
    arm
    {
      (0,0)  0.45  ; SH_ROT velocity
      (1,0)  0.45  ; SH_FLE velocity
      (2,0)  0.45  ; EL_FLE velocity
      (3,0)  0.45  ; EL_ROT velocity
      (4,0)  0.45  ; WR_FLE velocity
      (5,0)  0.45  ; WR_ROT velocity
    }
  }
}
